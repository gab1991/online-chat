@import url('https://fonts.googleapis.com/css2?family=Open+Sans:wght@400;600;700&display=swap');
@import url('https://fonts.googleapis.com/css2?family=Baloo+Bhai+2:wght@400;600;700&display=swap');

$min-app-heigth: 600px;
$ff-main: 'Open Sans', sans-serif;
$ff-secondary: 'Baloo Bhai 2', cursive;
$font-color-main: whitesmoke;
$theme-colors: (
  'background': (
    'basic': whitesmoke,
  ),
  'alpha': (
    'basic': #222831,
  ),
  'beta': (
    'basic': #404352,
  ),
  'gamma': (
    'basic': #645f74,
  ),
  'delta': (
    'basic': #8d7c95,
  ),
  'epsilon': (
    'basic': #ba9ab4,
  ),
  'zeta': (
    'basic': #e9b9d1,
  ),
);

$breakpoints: (
  'mobile': 600px,
  'tablet': 900px,
  'desktop': 1200px,
);

@mixin appHeight {
  height: 100vh;
  min-height: $min-app-heigth;
}

@function theme-color($key: 'primary', $variant: 'basic') {
  $map: map-get($theme-colors, $key);
  @return map-get($map, $variant);
}

@mixin respond-to($breakpoint) {
  @if map-has-key($breakpoints, $breakpoint) {
    @media (max-width: #{map-get($breakpoints, $breakpoint)}) {
      @content;
    }
  } @else {
    @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. "
          + "Please make sure it is defined in `$breakpoints` map.";
  }
}

@mixin customScrollBar($width, $custom-color...) {
  &::-webkit-scrollbar {
    width: $width;
  }
  &::-webkit-scrollbar-track {
    background-color: rgba(0, 0, 0, 0.1);
  }
  &::-webkit-scrollbar-thumb {
    @if length($custom-color) != 0 {
      background-color: $custom-color;
    } @else {
      background-color: theme-color('beta');
    }

    border-radius: 4px;
  }
}

:export {
  breakpoints : {
    tablet: map-get($breakpoints, 'tablet');
    mobile: map-get($breakpoints, 'mobile');
    desktop: map-get($breakpoints, 'desktop');
  }
  palette : {
    alpha: theme-color('alpha');
    beta: theme-color('beta');
    gamma: theme-color('gamma');
    delta: theme-color('delta');
    epsilon: theme-color('epsilon');
    zeta: theme-color('zeta');
    background: theme-color('background');
  }
}
